version: 2.1
jobs:
  build-linux:
    docker:
      - image: rust:1
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: apt update && apt install -y cmake pkg-config ruby ruby-dev
      - run:
          name: Config Git
          command: |
            git config --global init.defaultBranch master
            git config --global user.email "test@gmail.com"
            git config --global user.name "test"
      - run:
          name: Test
          working_directory: ./cli
          command: cargo test
      - run:
          name: Build Production
          working_directory: ./cli
          command: cargo build --locked --release --target x86_64-unknown-linux-gnu
      - run:
          name: Cucumber
          working_directory: ./cucumber
          command: |
            gem install bundler -v 2.3.4
            bundle install
            BIN_PATH=../cli/target/x86_64-unknown-linux-gnu/release/vcanrs bundle exec cucumber --format pretty --format junit --out test-results
      - store_test_results:
          path: cucumber/test-results
      - run:
          name: Move artifacts
          command: |
            mkdir -p artifacts
            mv cli/target/x86_64-unknown-linux-gnu/release/vcanrs artifacts/vcanrs-x86_64-unknown-linux-gnu
      - store_artifacts:
          path: artifacts
          destination: linux-build
      - persist_to_workspace:
          root: .
          paths:
            - artifacts

  build-macos:
    macos:
      xcode: "12.5.1"
    steps:
      - checkout
      - run:
          name: Install Rust
          command: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
      - run:
          name: Config Git
          command: |
            git config --global init.defaultBranch master
            git config --global user.email "test@gmail.com"
            git config --global user.name "test"
      - run:
          name: Test
          working_directory: ./cli
          command: cargo test
      - run:
          name: Build Production
          working_directory: ./cli
          command: cargo build --locked --release --target x86_64-apple-darwin
      - run:
          name: Cucumber
          working_directory: ./cucumber
          command: |
            gem install bundler -v 2.3.4
            bundle install
            BIN_PATH=../cli/target/x86_64-apple-darwin/release/vcanrs bundle exec cucumber --format pretty --format junit --out test-results
      - store_test_results:
          path: cucumber/test-results
      - run:
          name: Move artifacts
          command: |
            mkdir -p artifacts
            mv cli/target/x86_64-apple-darwin/release/vcanrs artifacts/vcanrs-x86_64-apple-darwin
      - store_artifacts:
          path: artifacts
          destination: macos-build
      - persist_to_workspace:
          root: .
          paths:
            - artifacts

  publish-github-release:
    machine:
      image: ubuntu-2004:current
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install ghr
          command: |
            GHR_VERSION=0.14.0
            GHR_URL=https://github.com/tcnksm/ghr/releases/download/v${GHR_VERSION}/ghr_v${GHR_VERSION}_linux_amd64.tar.gz
            wget "$GHR_URL" && tar xzf ghr_v${GHR_VERSION}_linux_amd64.tar.gz && sudo mv ghr_v${GHR_VERSION}_linux_amd64/ghr /usr/bin/ghr && rm -r ghr_v${GHR_VERSION}_linux_amd64.tar.gz ghr_v${GHR_VERSION}_linux_amd64/
      - run:
          name: "Publish Release on GitHub"
          command: |
            VERSION=$(artifacts/vcanrs-x86_64-unknown-linux-gnu --version | cut -d ' ' -f 2)
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${VERSION} ./artifacts

workflows:
  ci:
    jobs:
      - build-linux
      - build-macos
      - publish-github-release:
          context: public
          requires:
            - build-linux
            - build-macos
